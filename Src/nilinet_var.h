// notes in the melody:
/////////////////////////////////////////1//////////////////////////////////
int melody1[] = {NOTE_E5};
int noteDurations1[] = {4};
/////////////////////////////////////////2//////////////////////////////////
int melody2[] = {NOTE_E5, NOTE_E5};
int noteDurations2[] = {4, 4};
/////////////////////////////////////////3//////////////////////////////////
int melody3[] = {NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations3[] = {4, 4, 4};
/////////////////////////////////////////4//////////////////////////////////
int melody4[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations4[] = {4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody5[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations5[] = {4, 4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody6[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations6[] = {4, 4, 4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody7[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations7[] = {4, 4, 4, 4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody8[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations8[] = {4, 4, 4, 4, 4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody9[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations9[] = {4, 4, 4, 4, 4, 4, 4, 4, 4};
/////////////////////////////////////////5//////////////////////////////////
int melody10[] = {NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5};
int noteDurations10[] =  {4, 4, 4, 4, 4, 4, 4, 4, 4, 4};

//int melody[] = {
//  NOTE_E5, NOTE_E5, NOTE_E5,
//  NOTE_E5, NOTE_E5, NOTE_E5,
//  NOTE_E5, NOTE_G5, NOTE_C5, NOTE_D5,
//  NOTE_E5,
//  NOTE_F5, NOTE_F5, NOTE_F5, NOTE_F5,
//  NOTE_F5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5,
//  NOTE_E5, NOTE_D5, NOTE_D5, NOTE_E5,
//  NOTE_D5, NOTE_G5
//};
//
//// note durations: 4 = quarter note, 8 = eighth note, etc, also called tempo:
//int noteDurations[] = {
//  8, 8, 4,
//  8, 8, 4,
//  8, 8, 8, 8,
//  2,
//  8, 8, 8, 8,
//  8, 8, 8, 16, 16,
//  8, 8, 8, 8,
//  4, 4
//};
int length = 0;


unsigned long Time = 0;

unsigned long Start_Key_Time = 0;
int Status_key = 0; //1 = cancel;2 = sensor add;3 = remot on add;4 = remot off add;5 = delet;

bool POWERFLAGE = 0;

uint32_t SWITCH_DATA = 0;

uint32_t NUMBER_ZONE = 0;

unsigned long Start_SET_Time = 0;

int ansewer  = 0;
int data =  0;
unsigned long  NEW_TIME = 0;
unsigned long  NEW_TIME2 = 0;

int SMS_CALL_ZONE = 0;
uint64_t TIMER_SMS_CALL_ZONE = 0;

int SMS_STATUS = 0;
int SMS_STATUS2 = 0;

int CALL_STATUS = 0;
int CALL_ANS_STATUS = 0;
int CALL_Ring_STATUS = 0;
int CALL_Ring_STATUS2 = 0;

unsigned long  call_status_timer = 0;
unsigned long  call_resp_timer = 0;
unsigned long  call_rstart_time = 0;

unsigned long milisetphone = 0;

//////////////////////////////////////
//////////////////////////////////////
////////////eeprom data///////////////
//////////////////////////////////////
//////////////////////////////////////

bool Turn_Device = 0;
bool Turn_Siren = 0;
bool Turn_Beep = 0;

byte Time_Siren = 0;

bool Turn_ZONE[14] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
uint32_t Data_ZONE[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

uint32_t Data_Remote_On[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
uint32_t Data_Remote_Off[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

uint32_t Phone_Number[10] =  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0} ;


bool Turn_Time_Reset = 0;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////sim800l////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


String String_SMS_DATA_IN1 = "" ;
String String_SMS_DATA_IN2 = "" ;
String String_SMS_DATA_IN3 = "" ;
uint32_t  INT_SMS_DATA_IN4 = 0;

uint32_t  SMS_DATA_NUMBER_NEW = 0;
uint32_t  SMS_DATA_NUMBER_LAST = 0;

int  TIMER_S1 = 0;
int  TIMER_S2 = 0;
int  TIMER_S3 = 0;
int  TIMER_S4 = 0;
int  TIMER_S5 = 0;

int TIMER_S6 = 0;

int TIMER_S7 = 0;

int TIMER_S8 = 0;

int TIMER_S9 = 1800;

unsigned long  TIMER_S10 = 0;

unsigned long   TIMER_S11 = 0;

unsigned long   TIMER_S12 = 60;

unsigned long   TIMER_S13 = 18000;
bool check_flag_call_bool = 0;
bool check_flag_call_booll = 0;

unsigned long  timer_send_sms = 0;
unsigned long  timer_derivery_sms = 0;
int defrint_send_derivery_sms = 0;

uint64_t StartMilis = 0;
uint64_t StartMilis_s12 = 0;


int SMS_IN_I = 0;
int SMS_IN_J = 0;
int SMS_IN_K = 0;


int STATUS_RESET_TIME = 0;
int STATUS_RESET_ERROR = 0;
char STATUS_ERROR = 0;

int SIM800L_READY = 0;

bool SIM800L_WORKING = 0;

bool busy = 0;
///////////////////////////////////////////////////////////////////////////////////////////////////////
char *SMS_INSTRACTION_IN_String[] = {      "rij416695439580309\r", "rij416695439580309;", "rij set time:", "rij ucode:",
                                           "rij on\r", "rij off\r", "rij status\r", "rij reset\r", "rij siren on\r", "rij siren off\r", "rij beep on\r", "rij beep off\r", "rij clear\r", "rij status zone\r",
                                           "rij siren 1\r", "rij siren 3\r", "rij siren 5\r", "rij siren 7\r", "rij siren 10\r", "rij siren 15\r",
                                           "rij zone 1 on\r", "rij zone 2 on\r", "rij zone 3 on\r", "rij zone 4 on\r", "rij zone 5 on\r", "rij zone 6 on\r", "rij zone 7 on\r", "rij zone 8 on\r", "rij zone 9 on\r", "rij zone 10 on\r", "rij zone 11 on\r", "rij zone 12 on\r", "rij zone 13 on\r", "rij zone 14 on\r",
                                           "rij zone 1 off\r", "rij zone 2 off\r", "rij zone 3 off\r", "rij zone 4 off\r", "rij zone 5 off\r", "rij zone 6 off\r", "rij zone 7 off\r", "rij zone 8 off\r", "rij zone 9 off\r", "rij zone 10 off\r", "rij zone 11 off\r", "rij zone 12 off\r", "rij zone 13 off\r", "rij zone 14 off\r"
                                    };
/////////////////////////////////////////////////////////////////////////////
typedef struct {
  bool flag = 0; //anjam shode
  uint32_t SMS_PHONE = 0; //be che shomarei sms bede
  char SMS_TEXT[256] = ""; //text
  unsigned long ESP_TIME = 0; //millis()
} SMS_OUT_DATA;
SMS_OUT_DATA  SMS_OUT_DATAS[20];
//////////////////////////////////////////////////////////////////////////////
typedef struct {
  bool flag = 0; //anjam shode
  byte CALL_NUMBER = 0; //chekar kone
  uint32_t CALL_PHONE = 0; //call number
  unsigned long ESP_TIME = 0; //millis()
} CALL_OUT_DATA;
CALL_OUT_DATA  CALL_OUT_DATAS[20];
/////////////////////////////////////////////////////////////////////////////
typedef struct {
  bool flag = 0; //anjam shode
  byte SMS_NUMBER = 0; //chekar kone
  uint32_t COMAND_SMS_PHONE = 0; //kee gofte
  char COMAND_DATA[20] = "";
  unsigned long ESP_TIME = 0; //millis()
} SMS_IN_DATA;
SMS_IN_DATA  SMS_IN_DATAS[10];
/////////////////////////////////////////////////////////////////////////////
